Enter file contents here
*********************************************************************************************
AUTHOR              :  Mala Sivarajan
PURPOSE             :  Sample script for the US XCR impact analysis at campaign x demo level
SERVER/DB URL PROD  :  jdbc:netezza://nantz40.nielsen.com:5480/MCH_NOCR_PROD_XCR (US)
			                 jdbc:oracle:thin:@dayrheocrp031.enterprisenet.org:1521:grpprd (UK)
SERVER/DB URL UAT   :  jdbc:netezza://nantz42.nielsen.com:5480/schema_name or 
		                   jdbc:netezza://nantz53.nielsen.com:5480/schema_name 
TABLES              :  CROSS_MEDIA_CAMPAIGN_GROSS_RATING_FACT, reportable_demographic, 
			                 CAMPAIGN_THIRD_PARTY_DETAIL, CROSS_MEDIA_CAMPAIGN 
*********************************************************************************************

Step 1 – Pulling the estimated impressions and reach from the UAT tables
 
drop table table_Name_UAT;
create table table_Name_UAT as 
SELECT a.DATA_DATE,
       SOURCE_CROSS_MEDIA_CAMPAIGN_ID AS CAMPAIGN_TAG_ID,
       a.CROSS_MEDIA_CAMPAIGN_ID,
       CROSS_MEDIA_CAMPAIGN_NAME,
       COLLECTION_START_DATE,
       TARGET_GENDER_ALPHA_TYPE_CODE,
       TARGET_START_AGE,
       TARGET_END_AGE,
       TIME_SHIFTED_VIEWING_CATEGORY_CODE,
       a.ORIGINATOR_DISTRIBUTOR_ID,
       a.SITE_NAME,
       a.REPORTABLE_DEMOGRAPHIC_ID,
       REPORTABLE_DEMOGRAPHIC_DESC,
       TV_ONLY_UNIQUE_AUDIENCE AS TV_ONLY_UNIQUE_AUDIENCE_UAT,
       ONLINE_ONLY_UNIQUE_AUDIENCE AS ONLINE_ONLY_UNIQUE_AUDIENCE_UAT,
       BOTH_UNIQUE_AUDIENCE AS BOTH_UNIQUE_AUDIENCE_UAT,
       TV_ONLY_IMPRESSIONS AS TV_ONLY_IMPRESSIONS_UAT,
       ONLINE_ONLY_IMPRESSIONS AS ONLINE_ONLY_IMPRESSIONS_UAT,
       BOTH_TV_EXPOSURES AS BOTH_TV_EXPOSURES_UAT,
       BOTH_ONLINE_IMPRESSIONS AS BOTH_ONLINE_IMPRESSIONS_UAT,
       CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT AS 	CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_UAT,
	TV_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_UAT,
       ONLINE_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT AS 	ONLINE_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_UAT
FROM schema_name..CROSS_MEDIA_CAMPAIGN_GROSS_RATING_FACT a 
  JOIN (SELECT *
        FROM schema_name..CROSS_MEDIA_CAMPAIGN
        WHERE RELEASED_FOR_PROCESSING_FLAG = 'Y' AND COLLECTION_START_DATE >='start_date') c ON a.CROSS_MEDIA_CAMPAIGN_ID = c.CROSS_MEDIA_CAMPAIGN_ID 
  JOIN schema_name..reportable_demographic rd ON a.REPORTABLE_DEMOGRAPHIC_ID = rd.REPORTABLE_DEMOGRAPHIC_ID
WHERE a.reportable_demographic_id NOT IN (1999, 2999)
AND   a.RELEASED_FOR_PROCESSING_FLAG = 'Y'
AND   DATA_DATE = '2015-01-11'
AND   a.GEOGRAPHY_CODE = 1001
AND   (TV_ONLY_IMPRESSIONS>1000 or ONLINE_ONLY_IMPRESSIONS>1000 or BOTH_ONLINE_IMPRESSIONS>1000)
DISTRIBUTE ON RANDOM;
COMMIT;

Step 2 – Pulling the estimated impressions and reach from the Production tables 

drop table table_Name_PROD;
create table table_Name_PROD as 
SELECT a.DATA_DATE,
       SOURCE_CROSS_MEDIA_CAMPAIGN_ID AS CAMPAIGN_TAG_ID,
       a.CROSS_MEDIA_CAMPAIGN_ID,
       CROSS_MEDIA_CAMPAIGN_NAME,
       COLLECTION_START_DATE,
       TARGET_GENDER_ALPHA_TYPE_CODE,
       TARGET_START_AGE,
       TARGET_END_AGE,
       TIME_SHIFTED_VIEWING_CATEGORY_CODE,
       a.ORIGINATOR_DISTRIBUTOR_ID,
       a.SITE_NAME,
       a.REPORTABLE_DEMOGRAPHIC_ID,
       REPORTABLE_DEMOGRAPHIC_DESC,
       TV_ONLY_UNIQUE_AUDIENCE AS TV_ONLY_UNIQUE_AUDIENCE_PROD,
       ONLINE_ONLY_UNIQUE_AUDIENCE AS ONLINE_ONLY_UNIQUE_AUDIENCE_PROD,
       BOTH_UNIQUE_AUDIENCE AS BOTH_UNIQUE_AUDIENCE_PROD,
       TV_ONLY_IMPRESSIONS AS TV_ONLY_IMPRESSIONS_PROD,
       ONLINE_ONLY_IMPRESSIONS AS ONLINE_ONLY_IMPRESSIONS_PROD,
       BOTH_TV_EXPOSURES AS BOTH_TV_EXPOSURES_PROD,
       BOTH_ONLINE_IMPRESSIONS AS BOTH_ONLINE_IMPRESSIONS_PROD,
       CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT AS 	CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_PROD,
       TV_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT AS 	TV_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_PROD,
       ONLINE_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT AS 	ONLINE_CAMPAIGN_TARGET_DEMOGRAPHIC_IMPRESSIONS_PERCENT_PROD
FROM schema_name..CROSS_MEDIA_CAMPAIGN_GROSS_RATING_FACT a 
  JOIN (SELECT * FROM schema_name..CROSS_MEDIA_CAMPAIGN
        WHERE RELEASED_FOR_PROCESSING_FLAG = 'Y' AND COLLECTION_START_DATE >='start_date') c ON a.CROSS_MEDIA_CAMPAIGN_ID = c.CROSS_MEDIA_CAMPAIGN_ID 
  JOIN schema_name..reportable_demographic rd ON a.REPORTABLE_DEMOGRAPHIC_ID = rd.REPORTABLE_DEMOGRAPHIC_ID
WHERE a.reportable_demographic_id NOT IN (1999,2999)
AND   a.RELEASED_FOR_PROCESSING_FLAG = 'Y'
AND   DATA_DATE = '2015-01-11'
AND   a.GEOGRAPHY_CODE = 1001
AND   (TV_ONLY_IMPRESSIONS>1000 or ONLINE_ONLY_IMPRESSIONS>1000 or BOTH_ONLINE_IMPRESSIONS>1000)
DISTRIBUTE ON RANDOM;
COMMIT;

Step 3: Joining the above PROD and UAT table and pulling campaign x Demo % Diff 

drop table table_camp_Demo;
create table table_Plc_Demo as 
SELECT a.DATA_DATE,
       a.SOURCE_CROSS_MEDIA_CAMPAIGN_ID AS CAMPAIGN_TAG_ID,
       a.CROSS_MEDIA_CAMPAIGN_ID,
       a.CROSS_MEDIA_CAMPAIGN_NAME,
       a.COLLECTION_START_DATE,
       a.TARGET_GENDER_ALPHA_TYPE_CODE,
       a.TARGET_START_AGE,
       a.TARGET_END_AGE,
       a.TIME_SHIFTED_VIEWING_CATEGORY_CODE,
       a.ORIGINATOR_DISTRIBUTOR_ID,
       a.SITE_NAME,
       a.REPORTABLE_DEMOGRAPHIC_ID,
       a.REPORTABLE_DEMOGRAPHIC_DESC,       
	TV_ONLY_UNIQUE_AUDIENCE_PROD, TV_ONLY_UNIQUE_AUDIENCE_UAT,
	(TV_ONLY_UNIQUE_AUDIENCE_UAT/TV_ONLY_UNIQUE_AUDIENCE_PROD-1)* 100 as 	TV_ONLY_UA_DIFF,
	ONLINE_ONLY_UNIQUE_AUDIENCE_PROD, ONLINE_ONLY_UNIQUE_AUDIENCE_UAT,
	(ONLINE_ONLY_UNIQUE_AUDIENCE_UAT/ONLINE_ONLY_UNIQUE_AUDIENCE_PROD-1) as 	ONLINE_ONLY_UA_DIFF,
	BOTH_UNIQUE_AUDIENCE_PROD, BOTH_UNIQUE_AUDIENCE_UAT, 
	(BOTH_UNIQUE_AUDIENCE_UAT/BOTH_UNIQUE_AUDIENCE_PROD-1) as BOTH_UA_DIFF,
       TV_ONLY_IMPRESSIONS_PROD, TV_ONLY_IMPRESSIONS_UAT, 
	(TV_ONLY_IMPRESSIONS_UAT/TV_ONLY_IMPRESSIONS_PROD-1)* 100 as TV_ONLY_IMPRESSIONS_DIFF,
       ONLINE_ONLY_IMPRESSIONS_PROD, ONLINE_ONLY_IMPRESSIONS_UAT,
	(ONLINE_ONLY_IMPRESSIONS_UAT/ONLINE_ONLY_IMPRESSIONS_PROD-1)* 100 as 	ONLINE_ONLY_IMPRESSIONS_DIFF,
       BOTH_TV_EXPOSURES_PROD, BOTH_TV_EXPOSURES_UAT,
	(BOTH_TV_EXPOSURES_UAT/BOTH_TV_EXPOSURES_PROD-1) * 100 as BOTH_TV_EXPOSURES_DIFF,
       BOTH_ONLINE_IMPRESSIONS_PROD, BOTH_ONLINE_IMPRESSIONS_UAT,
	(BOTH_ONLINE_IMPRESSIONS_UAT/BOTH_ONLINE_IMPRESSIONS_PROD-1) * 100 as 	BOTH_ONLINE_IMPRESSIONS_DIFF	
  FROM (SELECT * FROM table_name_PROD) a 
  JOIN (SELECT * FROM table_name_UAT) b ON a.data_date = b.data_date 
  AND a.CROSS_MEDIA_CAMPAIGN_ID = b.CROSS_MEDIA_CAMPAIGN_ID
  AND a. CAMPAIGN_TAG_ID=b. CAMPAIGN_TAG_ID	
  AND a.COLLECTION_START_DATE=b.COLLECTION_START_DATE
  AND a. REPORTABLE_DEMOGRAPHIC_ID = b. REPORTABLE_DEMOGRAPHIC_ID
  DISTRIBUTE ON RANDOM;
  COMMIT;
      
Step 4: Adding the owners to produce the report

SELECT a.DATA_DATE,
       a.SOURCE_CROSS_MEDIA_CAMPAIGN_ID AS CAMPAIGN_TAG_ID,
       a.CROSS_MEDIA_CAMPAIGN_ID,
       a.CROSS_MEDIA_CAMPAIGN_NAME,
       a.COLLECTION_START_DATE,
       a.TARGET_GENDER_ALPHA_TYPE_CODE,
       a.TARGET_START_AGE,
       a.TARGET_END_AGE,
       a.TIME_SHIFTED_VIEWING_CATEGORY_CODE,
       a.ORIGINATOR_DISTRIBUTOR_ID,
       a.SITE_NAME,
       a.REPORTABLE_DEMOGRAPHIC_ID,
       a.REPORTABLE_DEMOGRAPHIC_DESC,
       TV_ONLY_UNIQUE_AUDIENCE_PROD, TV_ONLY_UNIQUE_AUDIENCE_UAT,
	TV_ONLY_UA_DIFF,
	ONLINE_ONLY_UNIQUE_AUDIENCE_PROD, ONLINE_ONLY_UNIQUE_AUDIENCE_UAT,
	ONLINE_ONLY_UA_DIFF,
	BOTH_UNIQUE_AUDIENCE_PROD, BOTH_UNIQUE_AUDIENCE_UAT, 
	BOTH_UA_DIFF,
       TV_ONLY_IMPRESSIONS_PROD, TV_ONLY_IMPRESSIONS_UAT, TV_ONLY_IMPRESSIONS_DIFF,
       ONLINE_ONLY_IMPRESSIONS_PROD, ONLINE_ONLY_IMPRESSIONS_UAT,
	ONLINE_ONLY_IMPRESSIONS_DIFF,
       BOTH_TV_EXPOSURES_PROD, BOTH_TV_EXPOSURES_UAT,
	BOTH_TV_EXPOSURES_DIFF,
       BOTH_ONLINE_IMPRESSIONS_PROD, BOTH_ONLINE_IMPRESSIONS_UAT,
       BOTH_ONLINE_IMPRESSIONS_DIFF,       
       PRIMARY_OWNER,
       SECONDARY_OWNER
FROM table_camp_Demo a 
 LEFT JOIN (SELECT P.CAMPAIGN_ID,
                    PRIMARY_OWNER,
                    SECONDARY_OWNER
             FROM (SELECT DISTINCT CAMPAIGN_ID,
                          a.OWNER_NAME AS PRIMARY_OWNER,OWNER_ID
                   FROM schema_name..CAMPAIGN_THIRD_PARTY_DETAIL a
                   WHERE RELEASED_FOR_PROCESSING_FLAG = 'Y'
                   AND   OWNER_LEVEL = 'P') P 
               LEFT JOIN (SELECT DISTINCT CAMPAIGN_ID,
                                 a.OWNER_NAME AS SECONDARY_OWNER,OWNER_ID
                          FROM schema_name..CAMPAIGN_THIRD_PARTY_DETAIL a
                          WHERE RELEASED_FOR_PROCESSING_FLAG = 'Y'
                          AND   OWNER_LEVEL = 'S'
                          AND   OWNER_ID = (SELECT MAX(OWNER_ID)
                                            FROM schema_name..CAMPAIGN_THIRD_PARTY_DETAIL b
                                            WHERE a.campaign_id = b.campaign_id
                                            AND   OWNER_LEVEL = 'S'
                                            AND   RELEASED_FOR_PROCESSING_FLAG = 'Y')) S ON P.CAMPAIGN_ID = S.CAMPAIGN_ID) O ON A.CROSS_MEDIA_CAMPAIGN_ID d = O.CROSS_MEDIA_CAMPAIGN_ID
WHERE ((TV_ONLY_UA_DIFF > 10 OR TV_ONLY_UA_DIFF < -10) OR (ONLINE_ONLY_UA_DIFF > 10 OR ONLINE_ONLY_UA_DIFF < -10) OR (BOTH_UA_DIFF > 10 OR BOTH_UA_DIFF < -10))
OR ((TV_ONLY_IMPRESSIONS_DIFF > 10 OR TV_ONLY_IMPRESSIONS_DIFF < -10) OR (ONLINE_ONLY_IMPRESSIONS_DIFF > 10 OR ONLINE_ONLY_IMPRESSIONS_DIFF < -10) OR (BOTH_TV_EXPOSURES_DIFF > 10 OR BOTH_TV_EXPOSURES_DIFF < -10) OR (BOTH_ONLINE_IMPRESSIONS_DIFF >10 or BOTH_ONLINE_IMPRESSIONS_DIFF < -10))
ORDER BY a.CROSS_MEDIA_CAMPAIGN_ID;



